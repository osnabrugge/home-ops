---
# yaml-language-server: $schema=http://kubernetes-schemas.local.lan:8080/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app omada-controller
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  test:
    enable: false
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  values:
    global:
      nameOverride: *app
    image:
      repository: mbentley/omada-controller
      tag: 5.9@sha256:7131e66daaa9eff3d30b7e4bd5652fe23fd7040ad4797e7d69eac651d7a05395
      pullPolicy: Always
    env:
      TZ: ${TIMEZONE}
      MANAGE_HTTP_PORT: "8088"
      MANAGE_HTTPS_PORT: &port 8043
      PORTAL_HTTP_PORT: "8088"
      PORTAL_HTTPS_PORT: "8843"
      SHOW_SERVER_LOGS: "true"
      SHOW_MONGODB_LOGS: "true"
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          hajimari.io/icon: "router-wireless-settings"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/upstream-vhost: "omada.${SECRET_DOMAIN}:8043"
          nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
          nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"
        hosts:
          - host: &host "omada.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    service:
      main:
        ports:
          http:
            port: *port
      controller:
        enabled: true
        type: LoadBalancer
        externalIPs: ["${SVC_OMADA_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          portal-https: # When the clients visit the Portal page via an HTTPS connection.
            enabled: true
            port: 8843
            targetPort: 8843
            protocol: TCP
          eap-discovery: # Omada Controller and Omada Discovery Utility discover Omada devices.
            enabled: true
            port: 29810
            targetPort: 29810
            protocol: UDP
          eap-manager-v1:  # Omada Controller and Omada Discovery Utility manage the Omada devices running firmware fully adapted to Omada Controller v4*.
            enabled: true
            port: 29811
            protocol: TCP
            targetPort: 29811
          eap-adopt-v1: # Omada Controller and Omada Discovery Utility manage the Omada devices running firmware fully adapted to Omada Controller v4*.
            enabled: true
            port: 29812
            protocol: TCP
            targetPort: 29812
          eap-upgrade-v1: # When upgrading the firmware for the Omada devices running firmware fully adapted to Omada Controller v4*.
            enabled: true
            port: 29813
            protocol: TCP
            targetPort: 29813
          eap-manager-v2: # Omada Controller and Omada Discovery Utility manage the Omada devices running firmware fully adapted to Omada Controller v5*.
            enabled: true
            port: 29814
            targetPort: 29814
            protocol: TCP
          eap-transfer-v2: # Starting from v5.9, Omada Controller receives Device Info and Packet Capture files from the Omada devices.
            enabled: true
            port: 29815
            targetPort: 29815
            protocol: TCP
          eap-rtty: # Starting from v5.9, Omada Controller establishes the remote control terminal session with the Omada devices.
            enabled: true
            port: 29816
            targetPort: 29816
            protocol: TCP
          eap-mongodb:
            enabled: true
            port: 27217
            targetPort: 27217
            protocol: TCP
    # livenessProbe:
    #   enabled: false
    # readinessProbe:
    #   enabled: false
    # startupProbe:
    #   enabled: false
    persistence:
      data:
        enabled: true
        mountPath: /opt/tplink/EAPController/data
        existingClaim: omada-data-pvc
      work:
        enabled: true
        mountPath: /opt/tplink/EAPController/work
        existingClaim: omada-work-pvc
      logs:
        enabled: true
        mountPath: /opt/tplink/EAPController/logs
        type: emptyDir
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: networking/mgmt-omada-conf
    nodeSelector:
      role: "storage-node"
    resources:
      requests:
        cpu: 1200m
        memory: 2000Mi
      limits:
        memory: 3000Mi
