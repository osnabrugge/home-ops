---
# yaml-language-server: $schema=http://kubernetes-schemas.local.lan:8080/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/jellyfin
      tag: 10.8.10@sha256:1ef614db6a4c589777eb48bc9004d573b9c09f0d6d573a509041c6060f3a956b
    env:
      TZ: ${TIMEZONE}
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_JELLYFIN_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: &port 8096
    # serviceMonitor:
    #   main:
    #     enabled: true
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/icon: simple-icons:jellyfin
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 106, 107, 109, 110, 10000] # 44, 106, 109 (baremetal) 44, 107, 110 (vm)
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 50Gi
        storageClass: ceph-block
    persistence:
      media:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: "${NFS_SHARE}/media"
        mountPath: /media
        readOnly: true
      recordings:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: "/volume1/apps/jellyfin/recordings"
        mountPath: /recordings
        readOnly: false
      transcode:
        enabled: true
        type: emptyDir
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: networking/storage-sriov-conf
    nodeSelector:
      intel.feature.node.kubernetes.io/gpu: "true"
    resources:
      requests:
        cpu: 100m
        memory: 1000Mi
        gpu.intel.com/i915: 1
        intel.com/sriov_netdevice: 1
      limits:
        memory: 4000Mi
        gpu.intel.com/i915: 1
        intel.com/sriov_netdevice: 1
