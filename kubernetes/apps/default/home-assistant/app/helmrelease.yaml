---
# yaml-language-server: $schema=http://kubernetes-schemas.local.lan:8080/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:15.5
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: home-assistant-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2023.12.0@sha256:102a1333b324173739c88b0b0dd2924ab5a6e7d42934c37affa47fe5265620cb
    env:
      TZ: "${TIMEZONE}"
      POSTGRES_HOST: postgres-rw.default.svc.cluster.local
      POSTGRES_DB: home_assistant
    envFrom:
      - secretRef:
          name: home-assistant-secret
    sidecars:
      rtsp-simple-server:
        image: ghcr.io/osnabrugge/rtsp-simple-server:v1.3.1
        imagePullPolicy: IfNotPresent
        env:
          MTX_PROTOCOLS: tcp
          RTSP_PROTOCOLS: tcp
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_HASS_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8123
          rtmp:
            enabled: true
            port: 1935
            targetPort: 1935
            protocol: TCP
          rtsp:
            enabled: true
            port: 8554
            targetPort: 8554
            protocol: TCP
          hls:
            enabled: true
            port: 8888
            targetPort: 8888
            protocol: TCP
          webrtc:
            enabled: true
            port: 8889
            targetPort: 8889
            protocol: TCP
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          hajimari.io/icon: mdi:home-assistant
        hosts:
          - host: &host hass.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: ceph-block
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: networking/iot-hass-sriov-conf
    resources:
      requests:
        cpu: 10m
        memory: 700Mi
        intel.com/sriov_netdevice: 1
      limits:
        memory: 1000Mi
        intel.com/sriov_netdevice: 1
